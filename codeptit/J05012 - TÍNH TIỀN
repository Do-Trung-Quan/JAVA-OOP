
import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;

public class Solution{
    static class HangHoa implements Comparable<HangHoa>{
        String id, name;
        long sl, dongia, chietkhau;
        public HangHoa(String id, String name, long sl, long dongia, long chietkhau){
            this.id = id;
            this.name = name;
            this.sl = sl;
            this.dongia = dongia;
            this.chietkhau = chietkhau;
        }
        
        public long getTotal(){
            return sl*dongia - chietkhau;
        }
        
        @Override
        public int compareTo(HangHoa b){
            return Long.compare(b.getTotal(), this.getTotal());
        }
        
        @Override
        public String toString(){
            return id+" "+name+" "+sl+" "+dongia+" "+chietkhau+" "+getTotal();
        }
    }
    
    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        List<HangHoa> a = new ArrayList<>();
        while(t-- > 0){
            in.nextLine();
            a.add(new HangHoa(in.nextLine(), in.nextLine(), in.nextLong(), in.nextLong(), in.nextLong()));
        }
        Collections.sort(a);
        for(HangHoa x:a){
            System.out.println(x);
        }
    }
}

/*
import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;

public class Solution {
    static class SinhVien implements Comparable<SinhVien> {
        String id, name, lop, email;
        String dnId; // Mã doanh nghiệp mà sinh viên đăng ký

        public SinhVien(String id, String name, String lop, String email) {
            this.id = id;
            this.name = chuanHoa(name);
            this.lop = lop;
            this.email = email;
            this.dnId = null; // Ban đầu chưa được gán doanh nghiệp
        }

        private String chuanHoa(String str) {
            StringBuilder sb = new StringBuilder();
            for (String s : str.trim().toLowerCase().split("\\s+")) {
                sb.append(Character.toUpperCase(s.charAt(0))).append(s.substring(1)).append(" ");
            }
            return sb.toString().trim();
        }

        @Override
        public int compareTo(SinhVien o) {
            return this.id.compareTo(o.id); // Sắp xếp theo mã sinh viên
        }

        @Override
        public String toString() {
            return id + " " + name + " " + lop;
        }
    }

    static class DoanhNghiep {
        String id, name;
        int lim; // Số sinh viên tối đa có thể nhận

        public DoanhNghiep(String id, String name, int lim) {
            this.id = id;
            this.name = name;
            this.lim = lim;
        }
    }

    public static void main(String[] args) throws FileNotFoundException {
        // Đọc danh sách sinh viên
        Scanner sv = new Scanner(new File("SINHVIEN.in"));
        List<SinhVien> sinhVienList = new ArrayList<>();
        int t = Integer.parseInt(sv.nextLine());
        while (t-- > 0) {
            sinhVienList.add(new SinhVien(sv.nextLine(), sv.nextLine(), sv.nextLine(), sv.nextLine()));
        }
        Collections.sort(sinhVienList); // Sắp xếp danh sách sinh viên
        sv.close();

        // Đọc danh sách doanh nghiệp
        Scanner dn = new Scanner(new File("DN.in"));
        List<DoanhNghiep> doanhNghiepList = new ArrayList<>();
        t = Integer.parseInt(dn.nextLine());
        while (t-- > 0) {
            doanhNghiepList.add(new DoanhNghiep(dn.nextLine(), dn.nextLine(), Integer.parseInt(dn.nextLine())));
        }
        dn.close();

        // Đọc danh sách đăng ký thực tập
        Scanner tt = new Scanner(new File("THUCTAP.in"));
        t = Integer.parseInt(tt.nextLine());
        Map<String, List<SinhVien>> thucTapMap = new HashMap<>();
        while (t-- > 0) {
            String[] registration = tt.nextLine().split("\\s+");
            String studentId = registration[0];
            String doanhNghiepId = registration[1];

            for (SinhVien svObj : sinhVienList) {
                if (svObj.id.equals(studentId)) {
                    svObj.dnId = doanhNghiepId; // Gán mã doanh nghiệp cho sinh viên
                    thucTapMap.putIfAbsent(doanhNghiepId, new ArrayList<>());
                    thucTapMap.get(doanhNghiepId).add(svObj);
                    break;
                }
            }
        }

        // Đọc danh sách các doanh nghiệp cần liệt kê
        t = Integer.parseInt(tt.nextLine());
        List<String> queryDoanhNghiep = new ArrayList<>();
        while (t-- > 0) {
            queryDoanhNghiep.add(tt.nextLine());
        }
        tt.close();

        // In danh sách thực tập theo yêu cầu
        for (String doanhNghiepId : queryDoanhNghiep) {
            DoanhNghiep dnObj = null;
            for (DoanhNghiep dnTmp : doanhNghiepList) {
                if (dnTmp.id.equals(doanhNghiepId)) {
                    dnObj = dnTmp;
                    break;
                }
            }
            if (dnObj != null) {
                System.out.println("DANH SACH THUC TAP TAI " + dnObj.name + ":");
                List<SinhVien> svList = thucTapMap.get(doanhNghiepId);
                if (svList != null) {
                    Collections.sort(svList);
                    int count = 0;
                    for (SinhVien svObj : svList) {
                        if (count < dnObj.lim) {
                            System.out.println(svObj);
                            count++;
                        }
                    }
                }
            }
        }
    }
}

*/
