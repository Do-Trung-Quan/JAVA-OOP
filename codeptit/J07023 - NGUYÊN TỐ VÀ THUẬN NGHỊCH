package demo;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

public class Solution{
    static int[] prime = new int[1000001];
    private static void sieve() {
        for (int i = 1; i <= 1000000; i++) {
            prime[i] = 1;
        }
        prime[0] = prime[1] = 0;
        for (int i = 2; i <= Math.sqrt(1000000); i++) {
            for (int j = i * i; j <= 1000000; j += i) {
                prime[j] = 0;
            }
        }
    }
    
    static boolean check(int n){
        if(prime[n]==0) return false;
        
        StringBuilder res = new StringBuilder(Integer.toString(n));
        String reversed = new StringBuilder(res).reverse().toString();
        return res.toString().equals(reversed);
    }
    
    public static void main(String[] args) throws IOException, ClassNotFoundException {
        sieve();
        ObjectInputStream f1 = new ObjectInputStream(new FileInputStream("DATA1.in"));
        ObjectInputStream f2 = new ObjectInputStream(new FileInputStream("DATA2.in"));
        ArrayList<Integer> a1 = (ArrayList<Integer>) f1.readObject();
        ArrayList<Integer> a2 = (ArrayList<Integer>) f2.readObject();
        Map<Integer, Integer> mp1 = new TreeMap<>();
        Map<Integer, Integer> mp2 = new TreeMap<>();
        for(int x:a1){
            mp1.put(x, mp1.getOrDefault(x, 0)+1);
        }
        for(int x:a2){
            mp2.put(x, mp2.getOrDefault(x, 0)+1);
        }
        for(int x:mp1.keySet()){
            if(check(x) && mp2.containsKey(x)) System.out.println(x+" "+mp1.get(x)+" "+mp2.get(x));
        }
    }
}
